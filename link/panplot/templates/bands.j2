unitsize(1cm);
currentpen = fontsize(1cm);
import patterns;

add("hatch", hatch());

real max_energy = {{ get_max_energy(states)  }};
real min_energy = {{ get_min_energy(states)  }};
real figure_height = {{args.height}};
real state_width = 10;
real state_height = 1;
real value;
real energy_to_value(real energy) {
  return figure_height * (energy - min_energy) / max_energy;
}
pair base, diagonal;

{% for state in states %}
//{{state }}

{% if state.spin == 1 %}
  {%- set color = "blue" -%}
  {%- set xcord = 0 -%}
{%- elif state.spin == 2 -%}
  {%- set color = "red" -%}
  {%- set xcord = "state_width/2" -%}
{%- else -%}
  {%- set color = "black" -%}
  {%- set xcord = 0 -%}
{% endif %}

base = ({{xcord}}, energy_to_value({{state.energy}}));
diagonal = ({{xcord}} + state_width, energy_to_value({{state.energy}}) + state_height);
filldraw(
  box(base, diagonal),
  {{color}}{% if state.occupation | float < 0.01 %} + pattern("hatch") {% endif %},
  black+linewidth(0)
);

label(
  scale(4.3)*"{{state.band}}",
  base +
  ({{state.spin}}>0 ? {{state.spin}} - 1 : 1) * (state_width, 0) +
  (0, 0.5 * state_height),
  0.2*{{color}}
);

{% endfor %}



{# vim: nospell ft=asy.jinja
#}
