TYPES


fun       % Simple function definition       % b
lambda    % Lambda expression                % b
class     % Class definition                 % b
met       % Method of a class                % b
attr      % Attribute of a class             % b
const     % Readonly variale                 % b
macro     % C-like macro                     % b
int       % Simple integer definition        % b
float     % Simple floating point definition % b
double    % Double precission                % b
char      % Character definition             % b
str       % String definition                % b
dic       % Relational array                 % b
arr       % List of values                   % b
pointer   % Pointer-like variable            % b
reference % Reference-like variable          % b
enum      % Enumeration definition           % b
struct    % Structure construct              % b
type      % Define custom type               % b
bin       % Binary numbers                   % b
hex       % Hexadecimal numbers              % b
octal     % Octal numbers                    % b
bool      % Boolean variables                % b
name      % Namespace                        % b
module    % Define module, package etc..     % b
c<TYPE>   % Constant type definition         % b
t<TYPE>   % Type safe definition             % b
ct<TYPE>  % Constant type safe definition    % b
a<TYPE>   % Array 1D type definition         % b
ca<TYPE>  % Array 1D type definition         % b

BRANCHING

if    % If construct
ife   % If else construct            % b
elif  % Else if construct            % b
else  % Just else                    % b
ifsh  % If construct, short form     % b
if3   % If construct tertiary form   % b
for   % For with index               % b
fori  % For in iterator form         % b
ford  % For in dictionary/table form % b
while % While loop                   % b
until % Until loop                   % b
case  % Case construct               % b
try   % Try/catch                    % b
ifm   % If regex match               % b

UTILS

new      % Instantiate object                  % b
pac      % Include some package                % b
so       % Print to stdout                     % b
serr     % Print to stderr                     % b
sex      % Raise exception                     % b
sof      % Printf to stdout (formated)         % b
read     % Stdin read                          % b
cd       % Change dir                          % b
ls       % List directory                      % b
sys      % Talk to the shell                   % b
mkdir    % Create directory                    % b
cp       % Copy a file                         % b
cpr      % Copy dir                            % b
fopen    % File open                           % b
fclose   % File open                           % b
fwrite   % File write                          % b
fread    % File read                           % b
exit     % Exit a program with status          % b
ret      % Return a value in function          % b
argc     % Get arguments number                % b
argvi    % Get ith argument                    % b
match    % Regex match                         % b
sizeof   % Get size of variables or types      % b
basename % Bash basename                       % b
genv     % Get Environment variables           % b
senv     % Set Environment variables           % b
clear    % stdout clear                        % b
sleep    % Sleep for some time                 % b
shbang   % Shbang for some scripting languages % b
slurp    % Slurp, read a whole file at once    % b

CONSTANTS

true  % True variable         % b
false % False keyword         % b
and   % And operator          % b
or    % Or operator           % b
bor   % Bitwise or            % b
band  % Bitwise and           % b
nan   % Not a number          % b
null  % Undefined variable    % b
eof   % End of file character % b

TEMPLATES

argv-parse % Parse command line % b
main       % Main template      % b

