

snippet class "Class definition" b
classdef (ConstructOnLoad=true) ${1:MyClass} ${2:< ${3:SuperClass}}
	properties
		Prop
	end
	methods
		function obj = $1(${3:val})
			if nargin > 0
				obj.Prop = $4;
			end
		end
	end
end
endsnippet

snippet ifeif
if ${1:condition}
	${2:body}
elseif ${3:condition}
	${4:body}
else
	${5:body}
end
endsnippet

snippet so "Stdout in matlab" b
disp('${1:Something \n}')
endsnippet

# set
snippet set
set(${1:get(${2:gca},'${3:PropertyName}')},'${4:PropertyName}',${5:PropertyValue});
endsnippet

# title
snippet tit
title('${1}');
endsnippet

# while
snippet whi
while ${1:condition}
	${2:body}
end
endsnippet

# xlabel
snippet xla
xlabel('${1}');
endsnippet

# xtick
snippet xti
set(gca,'XTick',[${2}]);
endsnippet

# ylabel
snippet yla
ylabel('${1}');
endsnippet

# ytick
snippet yti
set(gca,'YTick',[${2}]);
endsnippet

# zlabel
snippet zla
zlabel('${1}');
endsnippet

# ^
snippet ^
^(${1}) ${2}
endsnippet

# case
snippet case
case ${2:'${3:string}'}
	${0}
endsnippet

# clear
snippet cle
clear('${1:all}'${2});
endsnippet

# disp sprintf
snippet dsp
disp(sprintf('${1:%s}\\n'${1/([^%]|%%)*(%.)?.*/(?2:, :\);)/}${2}${1/([^%]|%%)*(%.)?.*/(?2:\);)/});
endsnippet

# disp
snippet disp
disp('${1:Text}');
endsnippet

# dlmwrite
snippet dlmwrite
dlmwrite('${1:filename}.dat', [${2:variables}], ${3:'${4:delimiter}', '${5:\t}'});
${0}
endsnippet

# else
snippet el
else
	${1:body}
endsnippet

# elseif
snippet elif
elseif ${1:condition}
	${0}
endsnippet

# error
snippet error
error('${1:Description}');
endsnippet

# exp
snippet e
exp(${1}) ${2}
endsnippet

# fprintf
snippet fpr
fprintf(${1:fid}, '${2:%s}\\n'${2/([^%]|%%)*(%.)?.*/(?2:, :\);)/}${3}${2/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet

# get
snippet get
get(${1:gca},'${2:PropertyName}');
endsnippet

# griddata
snippet griddata
griddata(${1:xx}, ${2:yy}, ${3:zz}, ${4:xi}, ${5:yi});
endsnippet

#ife
snippet ife
if ${1:condition}
	${2}
else
	${3}
end
endsnippet

# line
snippet line
line(${1:xvector},${2:yvector}${3:,'Color','${4:b}','LineWidth',${5:1},'LineStyle','${6:-}'})
endsnippet

# sprintf
snippet spr
sprintf('${1:%s}\\n'${1/([^%]|%%)*(%.)?.*/(?2:, :\);)/}${2}${1/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet

# switch ... case ... otherwise ... end
snippet switch
switch ${1:switch_expression}
	case ${2:case_expression}

	otherwise

end
endsnippet

# warning
snippet war
warning('${1:Description}');
endsnippet

# case
snippet case
switch ${1:var}
case ${2:'${3:string}'}
	${0}
end
endsnippet

# Try
snippet try
try
	${1}
catch
	${0}
endsnippet

# for
snippet for
for ${1:i} = ${2:from}:${3:to}

end
endsnippet

# if
snippet if
if ${1:condition}

end
endsnippet

# function
snippet fun
function [ ${1:output_args} ] = ${2:functionName}( ${3:input_args} )

end
endsnippet

# fontsize
snippet fontsi
set(gca, 'fontsize', ${1:14});
endsnippet

# fontweight
snippet fontwei
set(gca, 'fontweight', '${1:bold}');
endsnippet
