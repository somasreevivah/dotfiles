
# General {{{1 %

snippet utf8 "Utf8" b
\usepackage[utf8]{inputenc}
%\usepackage[english]{babel}
endsnippet

snippet amsmath "amsmath packages" b
% amsmath packages
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
endsnippet

snippet texdiff "Texdiff preamble" b
\usepackage{xcolor} \usepackage{ulem} \usepackage{changebar}
\newcommand\TLSins[1]{\cbstart{}\textcolor{ins}{\uline{#1}}\cbend{}}
\newcommand\TLSdel[1]{\cbdelete{}\textcolor{del}{\sout{#1}}}
%Define editing colors "ins" and "del" with existing "xcolor" color names:
\colorlet{ins}{blue} \colorlet{del}{red}
endsnippet

snippet def "General latex defintio" w
\def\\${1:nameOfVariable}{${2:value}}
endsnippet

snippet >= ">=" w
\geq
endsnippet

snippet <= ">=" w
\leq
endsnippet

snippet todo "Set Todo" b
\TODO{%
	${1:TODO MESSAGE}
}%$0
endsnippet

snippet dit "Desctiption item" b
\item[${1:key}]
	$0
endsnippet

snippet iit "itemize and enumerate item" b
\item
	$0
endsnippet

snippet c "General command" w
\\${1:command}${2:{${3:arg}}}
endsnippet

snippet lg "large text" w
{ \large ${1:${VISUAL}} }$0
endsnippet

snippet Lg "large text" w
{ \Large ${1:${VISUAL}} }$0
endsnippet

snippet hg "large text" w
{ \huge ${1:${VISUAL}} }$0
endsnippet

snippet Hg "large text" w
{ \Huge ${1:${VISUAL}} }$0
endsnippet

snippet multicolumn "Description" w
\multicolumn{${1:cols(2)}}{${2:|c|}}{${3:content}}$0
endsnippet

snippet vimrun "Vim-run code snippet" b
%vim-run: pdflatex % ; mupdf $(basename % .tex).pdf $0
endsnippet

snippet modeline "Modeline for latex" b
% vim:spell ft=tex spelllang=en fdm=marker:
endsnippet

snippet ... "ldots" w
\ldots$0
endsnippet

snippet * "cdot" w
\cdot$0
endsnippet

snippet note "Beamer note" b
\note{
	$0${VISUAL}
}
endsnippet

snippet red "red" w
\color{red}$0
endsnippet

snippet blue "Blue" w
\color{blue}$0
endsnippet

snippet color "color" w
\color{${1:red}}$0
endsnippet

snippet double-space "Double space command" b
%double space
\linespread{1.5}$0
endsnippet

snippet tmp-letter "letter" b
\documentclass{letter}
\usepackage{hyperref}
%\signature{Alejandro Gallo}
%\address{}
\begin{document}

\begin{letter}{Director \\ Doe \& Co \\ 35 Anthony Road
\\ Newport \\ Ipswich IP3 5RT}

\opening{Dear Sir or Madam:}

Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod
tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At
vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren,
no sea takimata sanctus est Lorem ipsum dolor sit amet.



Thank you for your time and consideration.

I look forward to your reply.

\closing{Yours Faithfully,}

%\ps

%P.S. You can find the full text of GFDL license at
%\url{http://www.gnu.org/copyleft/fdl.html}.

%\encl{Copyright permission form}

\end{letter}
\end{document}

endsnippet

snippet tmp "Super basic template" b
\documentclass[A4paper, 12pt]{article}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage[]{hyperref}
%\usepackage[english]{babel}
\usepackage[utf8]{inputenc}
\usepackage[]{graphicx}
\usepackage{xcolor}
%\usepackage[margin=0.5cm]{geometry}
\linespread{1.5}
\begin{document}

$0

\end{document}
endsnippet
snippet tmp-basic "Basic latex template" b
%  Preamble {{{1 %
%%%%%%%%%%%%%%%%%%
\documentclass[A4paper, 12pt]{article}

\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage[]{hyperref}
%\usepackage[english]{babel}
\usepackage[utf8]{inputenc}
\usepackage[]{graphicx}
\usepackage{xcolor}
%\usepackage[margin=0.5cm]{geometry}

\linespread{1.5}

\title{${2:Title}}
\author{${1:Alejandro Gallo}}



%  Document {{{1 %
%%%%%%%%%%%%%%%%%%
\begin{document}

\maketitle

$0


\end{document}
% vim: spell ft=tex
% vim-run: pdflatex % ; mupdf $(basename % .tex).pdf
endsnippet

snippet subfig "Subfigure of subcaption package" b
\begin{subfigure}[b]{0.3\textwidth}
	\includegraphics[width=\textwidth]{${1:path}}
	\caption{${1/\// /ga}}
	\label{fig:${1/\//_/ga}}
\end{subfigure}
endsnippet


#  math stuff {{{1  #
#####################


snippet dim
\mathsf{dim}$0
endsnippet


snippet d "Subindex (down)" i
_{${1:${VISUAL}}}$0
endsnippet

snippet u "Superindex (upper)" i
^{${1:${VISUAL}}}$0
endsnippet

snippet m
$ ${1:${VISUAL}} $$0
endsnippet

snippet $$
$$
${1:${VISUAL}}
$$$0
endsnippet

snippet mm
%
\[
	${1:${VISUAL}}
\]$0
%
endsnippet

snippet qu
\quad$0
endsnippet

snippet qqu
\qquad$0
endsnippet

snippet hat
\hat{${1:${VISUAL}}}$0
endsnippet

snippet vec
\vec{${1:${VISUAL}}}$0
endsnippet

snippet tilde
\tilde{${1:${VISUAL}}}$0
endsnippet

snippet sqr
\sqrt{${1:${VISUAL}}}$0
endsnippet

snippet set
\left \\{ ${1:${VISUAL}} \right \\} $0
endsnippet

snippet mrm "Math rm" w
\mathrm{${1:${VISUAL}}}$0
endsnippet

snippet mbb "Math bb" w
\mathbb{${1:${VISUAL}}}$0
endsnippet

snippet mbf "Math bf" w
\mathbf{${1:${VISUAL}}}$0
endsnippet

snippet cal "Math cal" w
\mathcal{${1:${VISUAL}}}$0
endsnippet

snippet fra "Math frakture" w
\mathfrak{${1:${VISUAL}}}$0
endsnippet

snippet msf "Math sf" w
\mathsf{${1:${VISUAL}}}$0
endsnippet

snippet document "documentclass" b
\documentclass[a4paper]{${1:article}}$0
endsnippet

snippet graph "Include graphic" b
\includegraphics[${2:width=${3:\\textwidth}, height=${4:$3}}]{${1:filePath}}
endsnippet
snippet twidth "text width" b
\textwidth
endsnippet
snippet theight "text height" b
\textheight
endsnippet
snippet eq "equation" b
%
\begin{equation${1:*}}
${3:${VISUAL}}
\end{equation$1}
%
endsnippet
snippet hbar
\hbar$0
endsnippet

snippet ref
\ref{$1}$0
endsnippet

snippet cite
\cite{$1}$0
endsnippet

snippet in
\in$0
endsnippet

snippet align "align" b
%
\begin{align${1:*}}
${3:${VISUAL}}
\end{align$1}
%
endsnippet

snippet toc "Table of contents" b
\tableofcontents$0
endsnippet

snippet minipage "Minipage" b
\begin{minipage}[${1:t}]{${2:0.5}\textwidth}
${3:${VISUAL}}
\end{minipage}
endsnippet

snippet centeri "Centering" b
\centering
endsnippet

snippet vspace "vertical space" w
\vspace{${1:1cm}}
endsnippet

snippet hspace "horizontal space" w
\hspace{${1:1cm}}
endsnippet

snippet it "Text italics with visual support" w
\textit{${1:${VISUAL}}}$0
endsnippet

snippet center "Center with visual" b
\begin{center}
${VISUAL}$0
\end{center}
endsnippet

# DIFFERENTIAL OPERATORS
snippet nab "Nabla operator" w
\nabla
endsnippet

snippet diff "Integral differential" w
\mathrm{d} ${1:\\mathbf{r}}$0
endsnippet

snippet pdiff "Integral differential" w
\partial ${1:\\mathbf{r}}$0
endsnippet

snippet int "Integral" w
\int${1:_{${2:\mathbb{R}}}} $0 ${3:\mathrm{d} ${4:x}}
endsnippet


#  Quantum {{{1  #
##################

snippet Spin2
S_{${1:${VISUAL}}}^{$2} $0
endsnippet

snippet Spinx2
\hat S_{x}^{2}
endsnippet

snippet Spiny2
\hat S_{y}^{2}
endsnippet

snippet Spinz2
\hat S_{z}^{2}
endsnippet

snippet + "Dagger" w
\dagger
endsnippet

#brakets..
snippet braket-def "Braket commands" b
\newcommand{\ket}[1]{\left| #1 \right>} % for Dirac bras
\newcommand{\bra}[1]{\left< #1 \right|} % for Dirac kets
\newcommand{\braket}[2]{\left< #1 \vphantom{#2} \right|\!\!
	\left. #2 \vphantom{#1} \right>} % for Dirac brackets
endsnippet

snippet ket "ket predefined" w
\ket{${1:\psi}}$0
endsnippet

snippet bra "bra predefined" w
\bra{${1:\psi}}$0
endsnippet
snippet braket "bra predefined" w
\braket{${1:\psi}}{${2:\psi}}$0
endsnippet

snippet rket "ket raw format" w
\left | ${1:${VISUAL}} \right \rangle $0
endsnippet

snippet rbra "bra raw format" w
\left \langle ${1:${VISUAL}} \right | $0
endsnippet

snippet rbraket "braket raw format" w
\left \langle $1 \right .
\left | $2 \right \rangle $0
endsnippet

snippet rproj "projector raw format" w
\left | $1 \right \rangle
\left \langle $2 \right | $0
endsnippet


#  Greek letters  {{{1 #
########################

snippet "([^\\])mu" "mu" r
`!p snip.rv=match.group(1)`\mu$0
endsnippet
snippet "([^\\])alpha" "alpha" r
`!p snip.rv=match.group(1)`\alpha$0
endsnippet
snippet "([^\\])nu" "nu" r
`!p snip.rv=match.group(1)`\nu$0
endsnippet
snippet "([^\\])beta" "beta" r
`!p snip.rv=match.group(1)`\beta$0
endsnippet
snippet "([^\\])Xi" "Xi" r
`!p snip.rv=match.group(1)`\Xi$0
endsnippet
snippet "([^\\])xi" "xi" r
`!p snip.rv=match.group(1)`\xi$0
endsnippet
snippet "([^\\])gamma" "gamma" r
`!p snip.rv=match.group(1)`\gamma$0
endsnippet
snippet "([^\\])Gamma" "Gamma" r
`!p snip.rv=match.group(1)`\Gamma$0
endsnippet
snippet "([^\\])delta" "delta" r
`!p snip.rv=match.group(1)`\delta$0
endsnippet
snippet "([^\\])Delta" "Delta" r
`!p snip.rv=match.group(1)`\Delta$0
endsnippet
snippet "([^\\])pi" "pi" r
`!p snip.rv=match.group(1)`\pi$0
endsnippet
snippet "([^\\])Pi" "Pi" r
`!p snip.rv=match.group(1)`\Pi$0
endsnippet
snippet "([^\\])epsilon" "epsilon" r
`!p snip.rv=match.group(1)`\epsilon$0
endsnippet
snippet "([^\\])vepsilon" "varepsilon" r
`!p snip.rv=match.group(1)`\varepsilon$0
endsnippet
snippet "([^\\])rho" "rho" r
`!p snip.rv=match.group(1)`\rho$0
endsnippet
snippet "([^\\])vrho" "varrho" r
`!p snip.rv=match.group(1)`\varrho$0
endsnippet
snippet "([^\\])zeta" "zeta" r
`!p snip.rv=match.group(1)`\zeta$0
endsnippet
snippet "([^\\])sigma" "sigma" r
`!p snip.rv=match.group(1)`\sigma$0
endsnippet
snippet "([^\\])Sigma" "Sigma" r
`!p snip.rv=match.group(1)`\Sigma$0
endsnippet
snippet "([^\\])eta" "eta" r
`!p snip.rv=match.group(1)`\eta$0
endsnippet
snippet "([^\\])tau" "tau" r
`!p snip.rv=match.group(1)`\tau$0
endsnippet
snippet "([^\\])theta" "theta" r
`!p snip.rv=match.group(1)`\theta$0
endsnippet
snippet "([^\\])vtheta" "vartheta" r
`!p snip.rv=match.group(1)`\vartheta$0
endsnippet
snippet "([^\\])Theta" "Theta" r
`!p snip.rv=match.group(1)`\Theta$0
endsnippet
snippet "([^\\])upsilon" "upsilon" r
`!p snip.rv=match.group(1)`\upsilon$0
endsnippet
snippet "([^\\])Upsilon" "Upsilon" r
`!p snip.rv=match.group(1)`\Upsilon$0
endsnippet
snippet "([^\\])iota" "iota" r
`!p snip.rv=match.group(1)`\iota$0
endsnippet
snippet "([^\\])phi" "phi" r
`!p snip.rv=match.group(1)`\phi$0
endsnippet
snippet "([^\\])vphi" "varphi" r
`!p snip.rv=match.group(1)`\varphi$0
endsnippet
snippet "([^\\])Phi" "Phi" r
`!p snip.rv=match.group(1)`\Phi$0
endsnippet
snippet "([^\\])kappa" "kappa" r
`!p snip.rv=match.group(1)`\kappa$0
endsnippet
snippet "([^\\])Kappa" "Kappa" r
`!p snip.rv=match.group(1)`endsnippet
snippet "([^\\])chi" "chi" r
`!p snip.rv=match.group(1)`\chi$0
endsnippet
snippet "([^\\])lambda" "lambda" r
`!p snip.rv=match.group(1)`\lambda$0
endsnippet
snippet "([^\\])Lambda" "Lambda" r
`!p snip.rv=match.group(1)`\Lambda$0
endsnippet
snippet "([^\\])psi" "psi" r
`!p snip.rv=match.group(1)`\psi$0
endsnippet
snippet "([^\\])Psi" "Psi" r
`!p snip.rv=match.group(1)`\Psi$0
endsnippet
snippet "([^\\])omega" "omega" r
`!p snip.rv=match.group(1)`\omega$0
endsnippet
snippet "([^\\])Omega" "Omega" r
`!p snip.rv=match.group(1)`\Omega$0
endsnippet




#  bibtex {{{1  #
#################

snippet bibtex "Initialise bibtex" b
\usepackage[backend=bibtex]{biblatex} %backend tells biblatex what you will be using to process the bibliography file
endsnippet

snippet bibtex-add "Insert bibtex document in latex document" b
\bibliographystyle{abbrv}
\bibliography{${1:file_name(without or extension)}}
endsnippet

snippet lab "Label" w
%`!p 
title=t[1]
if title == "eq":
    snip.rv="Equation"
elif title == "fig":
    snip.rv="Figure"
elif title == "tab":
    snip.rv="Table"
else:
    snip.rv="Environment"
` for ${2:label name}
\label{${1:fig}:${2/\s+/_/g}}
endsnippet



#  programing {{{1  #
#####################

snippet for "Foreach loop" b
\foreach \\${1:val} in {${1:hello,...,world}}
	{
	${2:%statements}
	}
endsnippet

snippet tikz-rec "Rectangle in tikz" b
\fill [${1:orange}] (${2:lower_corner}) rectangle (${3:upper_corner});
endsnippet

snippet tikz-var "Variable in tikz" b
\pgfmathsetmacro{\\${1:varname}}{${2:value}}
endsnippet

snippet tikz-coord "Coordinate in tikz" b
\coordinate (${1:POINT_NAME}) at (${2:x}, ${3:y});
endsnippet

snippet tikz-sum "Coordinate operation in tikz" w
(\$(${1:point})+(${2:point})\$)
endsnippet

snippet tikz-draw "Draw" b
\draw${1:[${2:style}]} (${3:point_begin}) -- (${4:point_end});
endsnippet

snippet tikz-draw-text "Draw" b
\node${1:[${2:style}]} at (${3:point_begin}) {
${5:Text}
};
endsnippet

#  Beamer {{{1  #
#################

snippet checkbox "Check box" b
\begin{center}
	\begin{tabular}{lp{0.8\textwidth}}
		\uncheckedBox & Task A \\\\
		\uncheckedBox & Task B \\\\
		\checkedBox & Task C \\\\
	\end{tabular}
\end{center}
endsnippet

snippet threads "Threads" b
\begin{center}
	\scalebox{0.75}{
	\begin{tikzpicture}
		\draw[squig] (0,0) -- (2,0);\node at (2,0.2) {{\footnotesize $t_1^2$}};
		\draw[squig] (2.2,0) -- (3,0);\node at (3,0.2) {{\footnotesize $t_2^2$}};
		\draw[squig] (3.2,0) -- (4,0);\node at (4,0.2) {{\footnotesize $t_3^2$}};
		\draw[squig] (0,0.5) -- (0.5,0.5);\node at (0.5,0.7)
		{{\footnotesize $t_1^1$}};
		\draw[squig] (0.7,0.5) -- (1.5,0.5);\node at (1.5,0.7)
		{{\footnotesize $t_2^1$}};
		\draw[squig] (1.7,0.5) -- (2.5,0.5);\node at (2.5,0.7)
		{{\footnotesize $t_3^1$}};
		\draw[squig] (2.7,0.5) -- (3.7,0.5);\node at (3.7,0.7)
		{{\footnotesize \sout{$t_4^1$}}};
		\draw[squig] (3.9,0.5) -- (5.0,0.5);\node at (5.0,0.7)
		{{\footnotesize \sout{$t_5^1$}}};
		\draw (4,-0.5) -- (4,1);
	\end{tikzpicture}
	}
\end{center}
endsnippet

snippet vis "Visible" b
\visible<${1:2-}>{
	$0
}
endsnippet

snippet ord "order for some beamer object" i
<${1:slide_begin}-${2:slide_end}>
endsnippet

snippet sli "On slide" b
\onslide<${1:slide_begin}-${2:slide_end}>{
${3:${VISUAL:some object}}
}
endsnippet

snippet frame "Beamer frame" b
\begin{frame}${1:[${2:plain/shrink/allowframebreaks}]}{${2:title}}
	${0:${VISUAL}}
\end{frame}
endsnippet

#  Sections override {{{1  #
############################

snippet sec "Section" b
\section{${1:${VISUAL:section_name}}} %{{{1
\label{sec:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

${0}
endsnippet

snippet ssec "Subsection" b
\subsection{${1:${VISUAL:subsection_name}}} %{{{1
\label{sub:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

${0}
endsnippet

snippet sssec "Subsubsection" b
\subsubsection{${1:${VISUAL:subsubsection_name}}} %{{{1
\label{ssub:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

${0}
endsnippet

snippet cha "Chapter" b
\chapter{${1:${VISUAL:chapter_name}}} %{{{1
\label{cha:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

${0}
endsnippet


# vim: ft=snippets
