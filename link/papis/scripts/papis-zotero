#! /usr/bin/env python3
# -*- coding: utf-8 -*-
# papis-short-help: Convert zotero library to papis library
# Copyright Â© 2017 Alejandro Gallo. GPLv3
import tempfile
import sys
import os
import papis.bibtex
import papis.api
import papis.commands
import papis.config
import yaml


def usage():
    print("Usage: papis zotero bibfile <papis add flags>")


if len(sys.argv) < 2:
    usage()
    sys.exit(1)


bib_file = sys.argv[1]
add_flags = sys.argv[2:]


if not os.path.exists(bib_file):
    print('ERROR: Bib file (%s) not found!' % bib_file)
    usage()
    sys.exit(1)


entries = papis.bibtex.bibtex_to_dict(bib_file)


def add(entry, pdf_file=None):
    temp = tempfile.mktemp()
    fd = open(temp, 'w+')
    yaml.dump(entry, fd, default_flow_style=False)
    fd.close()
    papis.commands.main(
        [
            'add', pdf_file or '--no-document', '--from-yaml', temp
        ] + add_flags
    )


for entry in entries:
    print('INFO: Processing  |   ref: %s' % entry['ref'])
    print('                  |Author: %s' % entry['author'])
    print('                  | Title: %s' % entry['title'])
    print('                  |')
    pdf_file = None
    if 'file' in entry.keys():
        pdf_file = entry.get('file').split(':')[1]
        pdf_file = os.path.join(os.path.dirname(bib_file), pdf_file)
        print('\tINFO: File field detected (%s)' % pdf_file)
        if not os.path.exists(pdf_file):
            print('\tWARNING: Path (%s) not found! Ignoring it' % pdf_file)
            del entry['file']
            pdf_file = None
    add(entry, pdf_file)
