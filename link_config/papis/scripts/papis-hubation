#! /usr/bin/env python3
# -*- coding: utf-8 -*-
# papis-short-help: Download citation using scihub.org
# Copyright Â© 2017 Alejandro Gallo. GPLv3
# Last modified: 2017-11-19
import sys
import papis.api
import papis.commands
import papis.crossref
import papis.document


def usage():
    print("Usage: papis hubation <papis-search> <add-flags>")

def print_no_citations_and_exit():
    print('The document does not have any citation information')
    sys.exit(1)


if len(sys.argv) < 2:
    search = ""
else:
    search = sys.argv[1]
    if search in ['-h', '--help']:
        usage()
        sys.exit(0)

add_flags = sys.argv[2:]

documents = papis.api.get_documents_in_lib(
    papis.api.get_lib(),
    search=search
)

doc = papis.api.pick_doc(
    documents
)

if 'citations' not in doc.keys():
    print_no_citations_and_exit()

dois = [d.get('doi') for d in doc['citations']]

print("%s citations found" % len(dois))
print("Fetching citations' information online")
dois_with_data = []
for j,doi in enumerate(dois):
    progress = "%s/%s (doi: %s)" % (j+1, len(dois), doi)
    sys.stdout.write(progress)
    sys.stdout.flush()
    dois_with_data.append(
        papis.crossref.doi_to_data(doi)
    )
    sys.stdout.write("\b" * (len(progress)))
    sys.stdout.write(" " * (len(progress)))
    sys.stdout.flush()
    sys.stdout.write("\b" * (len(progress)))
documents = [papis.document.Document(data=d) for d in dois_with_data]
doc = papis.api.pick_doc(documents)
doc or sys.exit(0)
doi = doc["doi"]

doi or sys.exit(0)

print('DOI %s selected' % doi)

papis.commands.main(
    [
        'scihub', doi
    ] + add_flags
)

